name: Release and publish to PyPI
run-name: v${{ inputs.version }} release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The new version string (e.g., 1.2.3)"
        required: true
        type: string

jobs:
  bump_and_build:
    name: Update version and build package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Output current package version
        id: version_check
        run: echo "ver=$(uv version --short)" >> "$GITHUB_OUTPUT"

      - name: Update version and commit changes # TODO: verified commit (and tag)
        if: steps.version_check.outputs.ver != inputs.version
        run: |
          uv version ${{ inputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml uv.lock
          git commit -m "Release: Bump version to ${{ inputs.version }}"
          git push

      - name: Create and push Git tag
        run: |
          TAG_NAME="v${{ inputs.version }}"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Build package
        run: uv build

      - name: Upload distribution files
        uses: actions/upload-artifact@v4
        with:
          name: package-dist
          path: dist/

  publish:
    name: Publish to PyPI
    needs: [bump_and_build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Download the distribution files
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: dist/

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github_release:
    name: Create Github release
    needs: [bump_and_build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download the distribution files
        uses: actions/download-artifact@v4
        with:
          name: package-dist
          path: dist/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ inputs.version }}'
          name: 'Release v${{ inputs.version }}'
          generate_release_notes: true
          files: dist/*
